%%
%% This is the package made by Michael Lienhardt for his LaTeX use
%%
%% Package `mlrules' to use with LaTeX 2e
%% Copyright Michael Lienhardt, all rights reserved.
%% Greatly inspired from mathpartir from Didier Remi
%% 
%% 


%% DESCRIPTION:
% This is a sty file for common BNF syntax and logic rules definition (and usage).
% This file defines two environments: syntax (for syntax declaration) and rules (for rules declaration)


%% INITIAL DECLARATIONS

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{mlrules}[2015/01/01 v0.1 type setting grammar definition and logic rules]



%% INCLUDES

% for setting some characteristics of the environments
\RequirePackage{keyval}
\RequirePackage{mathpartir}
\RequirePackage{amsmath}
%\RequirePackage{listings}


%% OPTIONS

% no options for now



%% SETTINGS THAT CAN BE CHANGED BY THE USER

% - define the size in which the text in the environment will be written -- can be any LaTeX size command
\define@key{mlrules}{size}{\expandafter\def\expandafter\mlrules@textsize{#1}}
% - define the mode in which the text will be written -- can be either "math" or "text" or "lst" for lstlisting -- I should find a way to allow the user creation of mode
\define@key{mlrules}{mode}{\expandafter\def\expandafter\mlrules@mode{#1}}
% - define where and how the description should be put
\define@key{mlrules}{desc}{\expandafter\def\expandafter\mlrules@desc{#1}}
 % this one defines the space between the entry and the description
\define@key{mlrules}{descsep}{\expandafter\def\expandafter\mlrules@descsep{#1}}
% - define the shape in which the rules are written
\define@key{mlrules}{shape}{\expandafter\def\expandafter\mlrules@shape{#1}}


\def\mlrules@mode@text{text}
\def\mlrules@mode@math{math}
%\def\mlrules@mode@lst{lst}

\def\mlrules@shape@compact{compact}
\def\mlrules@shape@array{array}

\def\mlrules@desc@position@left{left}
\def\mlrules@desc@position@right{right}
\def\mlrules@desc@side@flushleft{flushleft}
\def\mlrules@desc@side@flushright{flushright}



% command
\def\mlrulesset#1{\setkeys{mlrules}{#1}}

%default
\mlrulesset{size=\normalsize, mode=math, shape=compact, desc={right,flushleft}, descsep=0pt}






%% INTERNAL STRUCTURE




%% EXPORTED FUNCTIONS AND ENVIRONMENT







% SIMPLE GRAMMAR ENVIRONMENT
% public
\def\bnfdef{\mathrel{::=}}
\def\bnfor{\!\!\quad|\quad\!\!}
\def\bnfopt#1{{[{#1}]}}
\def\bnfstar#1{({#1})^*}

\newbox\mlrules@box
\newdimen\mlrules@box@height
\newdimen\mlrules@box@width
%\def\mlrules@syntax@lstname#1{ \usefont{OML}{cmm}{m}{it} #1 }
\def\mlrules@syntax@lstvect#1{%
  \sbox\mlrules@box{#1}
  \mlrules@box@height=\ht\mlrules@box \advance\mlrules@box@height by 1pt
  \mlrules@box@width=\wd\mlrules@box  \advance\mlrules@box@width  by 1pt
  \rule[\mlrules@box@height]{\wd\mlrules@box}{.5pt}\kern-\mlrules@box@width #1\kern1ex}% $\overline{\kern-1.2ex\mbox{ {#1}\, }\kern-1.5ex}$ }
  \def\mlrules@syntax@lstoption#1{[#1]}
%\lstdefinelanguage{mlrules@syntax@lst}{
%  literate=%
%   {|}{$\;|\;$}2
%   {(}{$($}1 {)}{$)$}1
%   {[}{$[$}1 {]}{$]$}1,
%   %{a}{$a$}1 {b}{$b$}1 {c}{$c$}1 {d}{$d$}1 {e}{$e$}1 {f}{$f$}1 {g}{$g$}1 {h}{$h$}1 {i}{$i$}1 {j}{$j$}1 {k}{$k$}1 {l}{$l$}1 {m}{$m$}1 {n}{$n$}1 {o}{$o$}1 {p}{$p$}1 {q}{$q$}1 {r}{$r$}1 {s}{$s$}1 {t}{$t$}1 {u}{$u$}1 {v}{$v$}1 {w}{$w$}1 {x}{$x$}1 {y}{$y$}1 {z}{$z$}1
%   %{A}{$A$}1 {B}{$B$}1 {C}{$C$}1 {D}{$D$}1 {E}{$E$}1 {F}{$F$}1 {G}{$G$}1 {H}{$H$}1 {I}{$I$}1 {J}{$J$}1 {K}{$K$}1 {L}{$L$}1 {M}{$M$}1 {N}{$N$}1 {O}{$O$}1 {P}{$P$}1 {Q}{$Q$}1 {R}{$R$}1 {S}{$S$}1 {T}{$T$}1 {U}{$U$}1 {V}{$V$}1 {W}{$W$}1 {X}{$X$}1 {Y}{$Y$}1 {Z}{$Z$}1
%   %{ }{\ }1
%   %,
%  moredelim=*[is][\mlrules@syntax@lstvect]{/-}{-/} % does not work well, because of listings internal way of processing words
%}

%private
\newif\ifmlrules@syntaxentry
\def\mlrules@syntaxentry@update{\ifmlrules@syntaxentry \\ \else \global\mlrules@syntaxentrytrue \fi}
\def\mrules@installsyntaxcommands{%
 \mlrules@syntaxentryfalse
 %1-desc
 \@for\desc:=\mlrules@desc\do{
  \ifx\desc\mlrules@desc@position@left  \let\mlrules@desc@position=\mlrules@desc@position@left\fi
  \ifx\desc\mlrules@desc@position@right \let\mlrules@desc@position=\mlrules@desc@position@right\fi
  \ifx\desc\mlrules@desc@side@flushleft  \let\mlrules@desc@side=\mlrules@desc@side@flushleft\fi
  \ifx\desc\mlrules@desc@side@flushright \let\mlrules@desc@side=\mlrules@desc@side@flushright\fi
 }
 \ifx\mlrules@desc@position\mlrules@desc@position@left
  \def\mlrules@syntax@entry@long[##1]##2=##3[##4]{\mlrules@syntaxentry@update
     \mbox{\mlrules@textsize ##1}\hspace{\mlrules@descsep} & \mlrules@text{##2} & \bnfdef & \hspace{3cm} \\%
     \mbox{\mlrules@textsize ##4}\hspace{\mlrules@descsep} &                    & \bnfor  & \mlrules@text{##3}}
  \def\mlrules@syntax@entry@simple##1=##2[##3]{\mlrules@syntaxentry@update
     \mbox{\mlrules@textsize ##3}\hspace{\mlrules@descsep} & \mlrules@text{##1} & \bnfdef & \mlrules@text{##2} }
  \def\oris##1[##2]{\\ \mbox{\mlrules@textsize ##2}\hspace{\mlrules@descsep} &  & \bnfor & \mlrules@text{##1} }
  \def\category##1[##2]{\mbox{\mlrules@textsize\it ##2}\hspace{\mlrules@descsep}&  & \mathrel{:} & \mlrules@text{##1} }
%
  \ifx\mlrules@desc@side\mlrules@desc@side@flushleft
   \def\mlrules@syntax@shape{@{}llcl}
  \else\ifx\mlrules@desc@side\mlrules@desc@side@flushright
   \def\mlrules@syntax@shape{@{}rlcl}
  \fi\fi
 \else\ifx\mlrules@desc@position\mlrules@desc@position@right
  \def\mlrules@syntax@entry@long[##1]##2=##3[##4]{\mlrules@syntaxentry@update
     \mlrules@text{##2} & \bnfdef & \hspace{3cm}       & \hspace{\mlrules@descsep}\mbox{\mlrules@textsize ##1} \\%
                        & \bnfor  & \mlrules@text{##3} & \hspace{\mlrules@descsep}\mbox{\mlrules@textsize ##4}}
  \def\mlrules@syntax@entry@simple##1=##2[##3]{\mlrules@syntaxentry@update
     \mlrules@text{##1} & \bnfdef & \mlrules@text{##2} & \hspace{\mlrules@descsep}\mbox{\mlrules@textsize ##3}}
  \def\oris##1[##2]{\\  & \bnfor & \mlrules@text{##1}  & \hspace{\mlrules@descsep}\mbox{\mlrules@textsize ##2}}
  \def\category##1[##2]{\mlrules@text{##1} & \mathrel{:} & \hspace{\mlrules@descsep}\mbox{\mlrules@textsize\it ##2} }
%
  \ifx\mlrules@desc@side\mlrules@desc@side@flushleft
   \def\mlrules@syntax@shape{@{}l@{\;}c@{\;}ll} 
  \else\ifx\mlrules@desc@side\mlrules@desc@side@flushright
   \def\mlrules@syntax@shape{@{}l@{\;}c@{\;}lr}
  \fi\fi
 \fi\fi
 %2-entry definition
 \DeclareRobustCommand\entry{\@ifnextchar[{\mlrules@syntax@entry@long}{\mlrules@syntax@entry@simple}}
 %1-mode
 \ifx\mlrules@mode\mlrules@mode@text
  \let\mlrules@text=\mbox
 \else\ifx\mlrules@mode\mlrules@mode@math
  \let\mlrules@text=\relax
 \else\ifx\mlrules@mode\mlrules@mode@lst
  %\def\mlrules@text##1{\mbox{\bgroup \lstinline[alsolanguage=mlrules@syntax@lst, columns=fullflexible, basicstyle=\itshape]@##1@ {}\egroup}}
 \fi\fi\fi
}

% main command
\newenvironment{syntax}[1][]{\mlrulesset{#1}\mrules@installsyntaxcommands\mlrules@textsize\begin{displaymath}\begin{array}{\mlrules@syntax@shape}}{\end{array}\end{displaymath}}
\newcommand{\syntaxinline}[2]{${#1}\ \bnfdef\ {#2}$}





% SIMPLE RULE ENVIRONMENT


\def\mlrules@ruleshapes@simple{
 \def\mlrules@rule@begin{\bgroup \mlrules@textsize\begin{mathpar}}
 \def\mlrules@rule@end{\end{mathpar}\egroup}
 \def\entry##1##2{\inferrule{\mlrules@text{##1}}{\mlrules@text{##2}}}
 \def\simpleentry##1{\mlrules@text{##1}}
}

\newif\ifmlrules@rulesentry
\def\mlrules@rulescompactentry@update{%
  \ifmlrules@rulesentry \mlrules@ruleseparator \else \global\mlrules@rulesentrytrue \fi%
  \def\mlrules@ruleseparator{\mlrules@ruleseparatordefault}} % hard dependence on mathpartir
\def\mlrules@ruleseparatorset[#1]{\def\mlrules@ruleseparator{{#1}}}

\def\mlrules@ruleshapes@compact{
 \def\mlrules@ruleseparatordefault{\and}
 \def\sep[##1]{\def\mlrules@ruleseparator{{##1}}}
 \def\mlrules@rules@rule@long[##1]##2##3{\mlrules@rulescompactentry@update {\inferrule[\mlrules@textsize ##1]{##2}{##3}}}
 \def\mlrules@rules@rule@simple##1##2{\mlrules@rulescompactentry@update {\inferrule{##1}{##2}}}
 \def\mlrules@rules@axiom@long[##1]##2{\mlrules@rulescompactentry@update \inferrule[\mlrules@textsize ##1]{##2}{}}
 \def\mlrules@rules@axiom@simple##1{\mlrules@rulescompactentry@update \inferrule{##1}{}}
 \def\mlrules@rule@begin{\bgroup\mlrules@rulesentryfalse\mlrules@textsize\begin{mathpar}}
 \def\mlrules@rule@end{\end{mathpar}\egroup}
%
% \def\mlrules@rules@rule@long[##1]##2##3{{\inferrule[\mlrules@textsize ##1]{\mlrules@text{##2}}{\mlrules@text{##3}}}}
% \def\mlrules@rules@rule@simple##1##2{{\inferrule{##1}{##2}}}
% \def\mlrules@rules@axiom@long[##1]##2{{\inferrule[\mlrules@textsize ##1]{\mlrules@text{##2}}{}}}
% \def\mlrules@rules@axiom@simple##1{{\inferrule{\mlrules@text{##1}}{}}}
% \def\mlrules@rule@begin{\bgroup\mlrules@rulesentryfalse\mlrules@textsize\begin{mathpar}}
% \def\mlrules@rule@end{\end{mathpar}\egroup}
}

%\def\mlrules@ruleshapes@compact{
% \def\mlrules@rules@rule@long[##1]##2##3{\inferrule[\mlrules@textsize ##1]{\mlrules@text{##2}}{\mlrules@text{##3}}}
%  \def\mlrules@rules@rule@simple##1##2{\inferrule{##1}{##2}}
% \def\mlrules@rules@axiom@long[##1]##2{\inferrule[\mlrules@textsize ##1]{\mlrules@text{##2}}{}}
% \def\mlrules@rules@axiom@simple##1{\inferrule{\mlrules@text{##1}}{}}
% \def\mlrules@rule@begin{\bgroup\mlrules@rulesentryfalse\mlrules@textsize\begin{mathpar}}
% \def\mlrules@rule@end{\end{mathpar}\egroup}
%}


\def\mlrules@rulesarrayentry@update{\ifmlrules@rulesentry \\ \else \global\mlrules@rulesentrytrue \fi}

\def\mlrules@ruleshapes@array{
 \def\mlrules@rules@rule@long[##1]##2##3{\mlrules@rulesarrayentry@update\mbox{\mlrules@textsize ##1} & \inferrule{\mlrules@text{##2}}{\mlrules@text{##3}}}
 \def\mlrules@rules@rule@simple##1##2{\mlrules@rulesarrayentry@update & \inferrule{\mlrules@text{##1}}{\mlrules@text{##2}}}
 \def\mlrules@rules@axiom@long[##1]##2{\mlrules@rulesarrayentry@update\mbox{\mlrules@textsize ##1} & \inferrule{\mlrules@text{##2}}{}}
 \def\mlrules@rules@axiom@simple##1{\mlrules@rulesarrayentry@update & \inferrule{\mlrules@text{##1}}{}}
 \def\mlrules@rule@begin{\bgroup\mlrules@rulesarrayentryfalse \mlrules@textsize\begin{displaymath}\begin{array}{rc}}
 \def\mlrules@rule@end{\end{array}\end{displaymath}\egroup}
}

\newenvironment{rules}[1][]{\bgroup\def\definedascase##1{\definedas\left\{{\mprset{flushleft}\inferrule{##1}{}}\right.}
  \mlrulesset{#1}
   %1-mode
 \ifx\mlrules@mode\mlrules@mode@text
  \let\mlrules@text=\mbox
 \else\ifx\mlrules@mode\mlrules@mode@math
  \let\mlrules@text=\relax
 \else\ifx\mlrules@mode\mlrules@mode@lst
  %\def\mlrules@text##1{\mbox{\bgroup \lstinline[alsolanguage=mlrules@syntax@lst, columns=fullflexible, basicstyle=\itshape]@##1@ {}\egroup}}
 \fi\fi\fi
  %2-shape
  \ifx\mlrules@shape\mlrules@shape@compact
    \mlrules@ruleshapes@compact
  \else\ifx\mlrules@shape\mlrules@shape@array
    \mlrules@ruleshapes@array
  \fi\fi
  \DeclareRobustCommand\rule{\@ifnextchar[{\mlrules@rules@rule@long}{\mlrules@rules@rule@simple}}
  \DeclareRobustCommand\axiom{\@ifnextchar[{\mlrules@rules@axiom@long}{\mlrules@rules@axiom@simple}}
  \mlrules@rule@begin}{\mlrules@rule@end\egroup}

  
  
  
  
  
  
  
  
  
  
  
  
  
  
% ANNEX COMMAND FOR USUAL LATEX USAGE

% font convensions
\newcommand{\mlrules@rm}{\rm}
\newcommand{\mlrules@rulename}[1]{{\scshape (#1)}}
\newcommand{\rulename}[1]{\ifmmode \text{\mlrules@rulename{#1}}\else\mlrules@rulename{#1}\fi}

\newcommand{\mlrules@textrmreal}[1]{{\mlrules@rm {#1}}}
\newcommand{\textrmreal}[1]{\ifmmode \text{\mlrules@textrmreal{#1}}\else\mlrules@textrmreal{#1}\fi}

\newcommand{\mlrules@textttreal}[1]{{\mlrules@rm\tt {#1}}}
\newcommand{\textttreal}[1]{\ifmmode \text{\mlrules@textttreal{#1}}\else\mlrules@textttreal{#1}\fi}

\newcommand{\mlrules@textitreal}[1]{{\mlrules@rm\it {#1}}}
\newcommand{\textitreal}[1]{\ifmmode \text{\mlrules@textitreal{#1}}\else\mlrules@textitreal{#1}\fi}

\newcommand{\mlrules@textbfreal}[1]{{\mlrules@rm\bf {#1}}}
\newcommand{\textbfreal}[1]{\ifmmode \text{\mlrules@textbfreal{#1}}\else\mlrules@textbfreal{#1}\fi}


% operations to define new commands
\def\mlrules@definemacro[#1|#2]#3/#4{\expandafter\newcommand\csname #1#3\endcsname{\expandafter #2{#4}}}
%\def\mlrules@definemacro[#1|#2]#3/#4{#1#3={#2{#4}}}
\def\mlrules@definemacros#1#2#3{\@for\cmd:=#3\do{\protected@edef\mlrules@definemacros@tmp{[#1|\noexpand #2]\cmd}\expandafter\mlrules@definemacro\mlrules@definemacros@tmp}}
\def\mlrules@definesimplemacros#1#2#3{\@for\cmd:=#3\do{\protected@edef\mlrules@definemacros@tmp{[#1|\noexpand #2]\cmd/{\cmd}}\expandafter\mlrules@definemacro\mlrules@definemacros@tmp}}

% example on how to use these commands
\newcommand{\mlrules@definekeywords}[1]{\mlrules@definesimplemacros{kw}{\kw}{#1}}
\newcommand{\mlrules@definecategories}[1]{\mlrules@definemacros{Names}{\mathcal}{#1}}
\newcommand{\mlrules@definesentries}[1]{\mlrules@definesimplemacros{se}{\textit}{#1}}


% classic functions, predicates and symbols
\newcommand{\subsets}{\mathcal{P}}
\newcommand{\card}{\#}
\newcommand{\sht}{\;|\;}
\newcommand{\definedas}{=}
\newcommand{\definedascase}[1]{\definedas\left\{\begin{array}{ll}#1\end{array}\right.}
\newcommand{\fv}{\textit{fv}}
\newcommand{\bv}{\textit{bv}}
\newcommand{\fn}{\textit{fn}}
\newcommand{\dom}{\text{\rm dom}}
\newcommand{\im}{\text{\rm im}}
\newcommand{\vect}[1]{\overline{#1}}
\newcommand{\fresh}{\text{\rm~fresh}}
\newcommand{\match}{\fun{match}}
\newcommand{\valc}{\vdash}

\newcommand{\typep}{\vdash}
\newcommand{\typed}{\mathrel{:}}

\newcommand{\bigland}{\bigwedge}
\newcommand{\biglor}{\bigvee}
\newcommand{\true}{\text{\bf true}}
\newcommand{\false}{\text{\bf false}}





\endinput

